//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModel
{
	/// <summary>
	/// Database       : AFEWellBook
	/// Data Source    : 127.0.0.1
	/// Server Version : 9.5.1
	/// </summary>
	public partial class AFEWellBookDB : LinqToDB.Data.DataConnection
	{
		public ITable<Device>       Devices       { get { return this.GetTable<Device>(); } }
		public ITable<Document>     Documents     { get { return this.GetTable<Document>(); } }
		public ITable<DocumentType> DocumentTypes { get { return this.GetTable<DocumentType>(); } }
		public ITable<Job>          Jobs          { get { return this.GetTable<Job>(); } }
		public ITable<JobStatus>    JobStatus     { get { return this.GetTable<JobStatus>(); } }
		public ITable<Operator>     Operators     { get { return this.GetTable<Operator>(); } }
		public ITable<User>         Users         { get { return this.GetTable<User>(); } }
		public ITable<UserType>     UserTypes     { get { return this.GetTable<UserType>(); } }
		public ITable<Vendor>       Vendors       { get { return this.GetTable<Vendor>(); } }
		public ITable<VendorBid>    VendorBids    { get { return this.GetTable<VendorBid>(); } }
		public ITable<VendorType>   VendorTypes   { get { return this.GetTable<VendorType>(); } }

		public AFEWellBookDB()
		{
			InitDataContext();
		}

		public AFEWellBookDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="public", Name="Device")]
	public partial class Device
	{
		[PrimaryKey, NotNull    ] public int    DeviceID   { get; set; } // integer
		[Column,        Nullable] public string DevicePath { get; set; } // text

		#region Associations

		/// <summary>
		/// Table_Document_Table_Device_FK_BackReference
		/// </summary>
		[Association(ThisKey="DeviceID", OtherKey="DeviceID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Document> TableDocumentTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="Document")]
	public partial class Document
	{
		[PrimaryKey, NotNull    ] public int       DocumentID     { get; set; } // integer
		[Column,        Nullable] public int?      DeviceID       { get; set; } // integer
		[Column,        Nullable] public string    LocalPath      { get; set; } // text
		[Column,        Nullable] public int?      DocumentTypeID { get; set; } // integer
		[Column,        Nullable] public DateTime? DateCreated    { get; set; } // date

		#region Associations

		/// <summary>
		/// Table_Document_Table_Device_FK
		/// </summary>
		[Association(ThisKey="DeviceID", OtherKey="DeviceID", CanBeNull=true, KeyName="Table_Document_Table_Device_FK", BackReferenceName="TableDocumentTableFKs")]
		public Device TableTableDeviceFK { get; set; }

		/// <summary>
		/// Table_Document_Table_DocumentType_FK
		/// </summary>
		[Association(ThisKey="DocumentTypeID", OtherKey="DocumentTypeID", CanBeNull=true, KeyName="Table_Document_Table_DocumentType_FK", BackReferenceName="TableDocumentTableFKs")]
		public DocumentType TableTableDocumentTypeFK { get; set; }

		/// <summary>
		/// Table_VendorBid_Table_Document_FK_BackReference
		/// </summary>
		[Association(ThisKey="DocumentID", OtherKey="DocumentID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<VendorBid> TableVendorBidTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="DocumentType")]
	public partial class DocumentType
	{
		[PrimaryKey, NotNull    ] public int    DocumentTypeID { get; set; } // integer
		[Column,        Nullable] public string NameX          { get; set; } // text

		#region Associations

		/// <summary>
		/// Table_Document_Table_DocumentType_FK_BackReference
		/// </summary>
		[Association(ThisKey="DocumentTypeID", OtherKey="DocumentTypeID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Document> TableDocumentTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="Job")]
	public partial class Job
	{
		[PrimaryKey, NotNull    ] public int       JobID        { get; set; } // integer
		[Column,        Nullable] public string    NameX        { get; set; } // text
		[Column,        Nullable] public int?      JobStatusID  { get; set; } // integer
		[Column,        Nullable] public int?      OperatorID   { get; set; } // integer
		[Column,        Nullable] public int?      VendorID     { get; set; } // integer
		[Column,        Nullable] public DateTime? DatePosted   { get; set; } // date
		[Column,        Nullable] public DateTime? DateAccepted { get; set; } // date
		[Column,        Nullable] public object    VendorIDList { get; set; } // ARRAY

		#region Associations

		/// <summary>
		/// Table_Job_Table_JobStatus_FK
		/// </summary>
		[Association(ThisKey="JobStatusID", OtherKey="JobStatusID", CanBeNull=true, KeyName="Table_Job_Table_JobStatus_FK", BackReferenceName="TableJobTableFKs")]
		public JobStatus TableTableJobStatusFK { get; set; }

		/// <summary>
		/// Table_Job_Table_Operator_FK
		/// </summary>
		[Association(ThisKey="OperatorID", OtherKey="OperatorID", CanBeNull=true, KeyName="Table_Job_Table_Operator_FK", BackReferenceName="TableJobTableFKs")]
		public Operator TableTableOperatorFK { get; set; }

		/// <summary>
		/// Table_Job_Table_Vendor_FK
		/// </summary>
		[Association(ThisKey="VendorID", OtherKey="VendorID", CanBeNull=true, KeyName="Table_Job_Table_Vendor_FK", BackReferenceName="TableJobTableFKs")]
		public Vendor TableTableVendorFK { get; set; }

		/// <summary>
		/// Table_VendorBid_Table_Job_FK_BackReference
		/// </summary>
		[Association(ThisKey="JobID", OtherKey="JobID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<VendorBid> TableVendorBidTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="JobStatus")]
	public partial class JobStatus
	{
		[PrimaryKey, NotNull    ] public int    JobStatusID { get; set; } // integer
		[Column,        Nullable] public string NameX       { get; set; } // text

		#region Associations

		/// <summary>
		/// Table_Job_Table_JobStatus_FK_BackReference
		/// </summary>
		[Association(ThisKey="JobStatusID", OtherKey="JobStatusID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Job> TableJobTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="Operator")]
	public partial class Operator
	{
		[PrimaryKey, NotNull    ] public int    OperatorID   { get; set; } // integer
		[Column,        Nullable] public string NameX        { get; set; } // text
		[Column,        Nullable] public int?   PhoneID      { get; set; } // integer
		[Column,        Nullable] public int?   AddressID    { get; set; } // integer
		[Column,        Nullable] public int?   EmailID      { get; set; } // integer
		[Column,        Nullable] public bool?  IsAdmin      { get; set; } // boolean
		[Column,        Nullable] public bool?  IsCompanyMan { get; set; } // boolean

		#region Associations

		/// <summary>
		/// Table_Job_Table_Operator_FK_BackReference
		/// </summary>
		[Association(ThisKey="OperatorID", OtherKey="OperatorID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Job> TableJobTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="User")]
	public partial class User
	{
		[PrimaryKey, NotNull    ] public int    UserID       { get; set; } // integer
		[Column,        Nullable] public string NameX        { get; set; } // text
		[Column,        Nullable] public int?   UserTypeID   { get; set; } // integer
		[Column,        Nullable] public string UserName     { get; set; } // text
		[Column,        Nullable] public string UserPassword { get; set; } // text

		#region Associations

		/// <summary>
		/// Table_User_Table_UserType_FK
		/// </summary>
		[Association(ThisKey="UserTypeID", OtherKey="UserTypeID", CanBeNull=true, KeyName="Table_User_Table_UserType_FK", BackReferenceName="TableUserTableFKs")]
		public UserType TableTableUserTypeFK { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="UserType")]
	public partial class UserType
	{
		[PrimaryKey, NotNull    ] public int    UserTypeID { get; set; } // integer
		[Column,        Nullable] public string NameX      { get; set; } // text
		[Column,        Nullable] public bool?  IsAdmin    { get; set; } // boolean

		#region Associations

		/// <summary>
		/// Table_User_Table_UserType_FK_BackReference
		/// </summary>
		[Association(ThisKey="UserTypeID", OtherKey="UserTypeID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<User> TableUserTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="Vendor")]
	public partial class Vendor
	{
		[PrimaryKey, NotNull    ] public int    VendorID     { get; set; } // integer
		[Column,        Nullable] public string NameX        { get; set; } // text
		[Column,        Nullable] public int?   VendorTypeID { get; set; } // integer
		[Column,        Nullable] public int?   PhoneID      { get; set; } // integer
		[Column,        Nullable] public int?   AddressID    { get; set; } // integer
		[Column,        Nullable] public int?   EmailID      { get; set; } // integer

		#region Associations

		/// <summary>
		/// Table_Vendor_Table_VendorType_FK
		/// </summary>
		[Association(ThisKey="VendorTypeID", OtherKey="VendorTypeID", CanBeNull=true, KeyName="Table_Vendor_Table_VendorType_FK", BackReferenceName="TableVendorTableFKs")]
		public VendorType TableTableVendorTypeFK { get; set; }

		/// <summary>
		/// Table_Job_Table_Vendor_FK_BackReference
		/// </summary>
		[Association(ThisKey="VendorID", OtherKey="VendorID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Job> TableJobTableFKs { get; set; }

		/// <summary>
		/// Table_VendorBid_Table_Vendor_FK_BackReference
		/// </summary>
		[Association(ThisKey="VendorID", OtherKey="VendorID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<VendorBid> TableVendorBidTableFKs { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="VendorBid")]
	public partial class VendorBid
	{
		[PrimaryKey, NotNull    ] public int       VendorBidID { get; set; } // integer
		[Column,        Nullable] public int?      JobID       { get; set; } // integer
		[Column,        Nullable] public int?      VendorID    { get; set; } // integer
		[Column,        Nullable] public double?   BidAmount   { get; set; } // double precision
		[Column,        Nullable] public DateTime? DatePosted  { get; set; } // date
		[Column,        Nullable] public bool?     IsActive    { get; set; } // boolean
		[Column,        Nullable] public int?      DocumentID  { get; set; } // integer

		#region Associations

		/// <summary>
		/// Table_VendorBid_Table_Job_FK
		/// </summary>
		[Association(ThisKey="JobID", OtherKey="JobID", CanBeNull=true, KeyName="Table_VendorBid_Table_Job_FK", BackReferenceName="TableVendorBidTableFKs")]
		public Job TableTableJobFK { get; set; }

		/// <summary>
		/// Table_VendorBid_Table_Vendor_FK
		/// </summary>
		[Association(ThisKey="VendorID", OtherKey="VendorID", CanBeNull=true, KeyName="Table_VendorBid_Table_Vendor_FK", BackReferenceName="TableVendorBidTableFKs")]
		public Vendor TableTableVendorFK { get; set; }

		/// <summary>
		/// Table_VendorBid_Table_Document_FK
		/// </summary>
		[Association(ThisKey="DocumentID", OtherKey="DocumentID", CanBeNull=true, KeyName="Table_VendorBid_Table_Document_FK", BackReferenceName="TableVendorBidTableFKs")]
		public Document TableTableDocumentFK { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="VendorType")]
	public partial class VendorType
	{
		[PrimaryKey, NotNull    ] public int    VendorTypeID { get; set; } // integer
		[Column,        Nullable] public string NameX        { get; set; } // text

		#region Associations

		/// <summary>
		/// Table_Vendor_Table_VendorType_FK_BackReference
		/// </summary>
		[Association(ThisKey="VendorTypeID", OtherKey="VendorTypeID", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<Vendor> TableVendorTableFKs { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Device Find(this ITable<Device> table, int DeviceID)
		{
			return table.FirstOrDefault(t =>
				t.DeviceID == DeviceID);
		}

		public static Document Find(this ITable<Document> table, int DocumentID)
		{
			return table.FirstOrDefault(t =>
				t.DocumentID == DocumentID);
		}

		public static DocumentType Find(this ITable<DocumentType> table, int DocumentTypeID)
		{
			return table.FirstOrDefault(t =>
				t.DocumentTypeID == DocumentTypeID);
		}

		public static Job Find(this ITable<Job> table, int JobID)
		{
			return table.FirstOrDefault(t =>
				t.JobID == JobID);
		}

		public static JobStatus Find(this ITable<JobStatus> table, int JobStatusID)
		{
			return table.FirstOrDefault(t =>
				t.JobStatusID == JobStatusID);
		}

		public static Operator Find(this ITable<Operator> table, int OperatorID)
		{
			return table.FirstOrDefault(t =>
				t.OperatorID == OperatorID);
		}

		public static User Find(this ITable<User> table, int UserID)
		{
			return table.FirstOrDefault(t =>
				t.UserID == UserID);
		}

		public static UserType Find(this ITable<UserType> table, int UserTypeID)
		{
			return table.FirstOrDefault(t =>
				t.UserTypeID == UserTypeID);
		}

		public static Vendor Find(this ITable<Vendor> table, int VendorID)
		{
			return table.FirstOrDefault(t =>
				t.VendorID == VendorID);
		}

		public static VendorBid Find(this ITable<VendorBid> table, int VendorBidID)
		{
			return table.FirstOrDefault(t =>
				t.VendorBidID == VendorBidID);
		}

		public static VendorType Find(this ITable<VendorType> table, int VendorTypeID)
		{
			return table.FirstOrDefault(t =>
				t.VendorTypeID == VendorTypeID);
		}
	}
}
